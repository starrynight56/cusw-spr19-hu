//Generate nice buildings 
//built off of the example given by GenericCity3D by Nina Lutz
import picking.*;
Picker picker;

class Building {
  
  PVector location;
  int id;
  //I assume that the foot foot traffic generated by a certain business is stagnant
  int footTraffic;
  boolean selected;
  float size, num, w, h;
  
  //Constructor
  Building(PVector location, float size, float w, float h, int id) {
    this.location = location;
    this.size = size*12;
    this.h = h;
    this.w = w;
    this.id = id;
    this.footTraffic = round(random(300, 1000));
  }
   void draw() {
    pushMatrix();
    //translate the building to desired location
    translate(location.x, location.y-num/2, location.z);
    stroke(0);
    fill(60);
    
    //Grid cells
    if(size < 1){
      stroke(0);
      fill(255);
    }
    //building 
    box(w, num, h);
    
    //foot traffic 
    
    
    //yellow outline
    if(selected){ 
      noFill();
      stroke(255,255,0);
      box(w+2, num+2, h+2);
    }
    
    popMatrix();
    
    
    if (num < size){//if not the grid cells. animate them anyway lol
       num += map(size, 0, 100, 0.3, 4);
    }
    
  }
  
}
void moveBuilding(Building b){
  
    if (key == CODED) { //<>//
      if (keyCode == LEFT && b.location.x>= -gMAX) {
        b.location.x -= cellSize;
      } else if (keyCode == RIGHT && b.location.x<= gMAX) {
        b.location.x += cellSize;
      } else if (keyCode == UP&& b.location.z>= -gMAX) {
        b.location.z -= cellSize;
      } else if(keyCode == DOWN && b.location.z<= gMAX){
        b.location.z += cellSize; 
      }
    }
}

void toggleSelect(Building b){
  b.selected = !b.selected;
}

//move the building one space at a time. 


void drawBuildings(){
  //draw Buildings
  for (int i =0; i<city.size(); i++){
    Building b = (Building) city.get(i);
    picker.start(i);
    b.draw();
  }
  picker.stop();
  //draw grid
  for (int i = 0; i < grid.size (); i++) {
    Building gridItem = (Building) grid.get(i);
    gridItem.draw();
  }
  
  

}
